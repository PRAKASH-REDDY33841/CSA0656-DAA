#include <stdio.h>
#include <stdbool.h>
#include <math.h>

// Function to generate all prime numbers up to n using Sieve of Eratosthenes
void sieveOfEratosthenes(int n) {
    // Create an array of boolean values and initialize all entries as true
    bool prime[n + 1];
    for (int i = 0; i <= n; i++) {
        prime[i] = true;
    }

    // Set false for non-prime numbers
    for (int p = 2; p <= sqrt(n); p++) {
        // If prime[p] is not changed, then it is a prime
        if (prime[p] == true) {
            // Update all multiples of p
            for (int i = p * p; i <= n; i += p) {
                prime[i] = false;
            }
        }
    }

    // Print all prime numbers
    printf("Prime numbers up to %d are: ", n);
    for (int p = 2; p <= n; p++) {
        if (prime[p]) {
            printf("%d ", p);
        }
    }
    printf("\n");
}

int main() {
    int n;
    printf("R.Gnana Prakash Reddy - 192211740\n");
    printf("Enter the limit: ");
    scanf("%d", &n);
    sieveOfEratosthenes(n);
    return 0;
}
