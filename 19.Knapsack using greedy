#include <stdio.h>

// Structure for an item which stores weight and corresponding value
struct Item {
    int value;
    int weight;
};

// Function to swap two items
void swap(struct Item* a, struct Item* b) {
    struct Item temp = *a;
    *a = *b;
    *b = temp;
}

// Function to sort the items based on value-to-weight ratio
void sortItems(struct Item items[], int n) {
    for (int i = 0; i < n - 1; i++) {
        for (int j = 0; j < n - i - 1; j++) {
            double r1 = (double)items[j].value / items[j].weight;
            double r2 = (double)items[j + 1].value / items[j + 1].weight;
            if (r1 < r2) {
                swap(&items[j], &items[j + 1]);
            }
        }
    }
}

// Function to calculate the maximum value we can get with the given knapsack capacity
double fractionalKnapsack(struct Item items[], int n, int capacity) {
    // Sort items by value-to-weight ratio
    sortItems(items, n);

    double totalValue = 0.0; // Total value in knapsack

    for (int i = 0; i < n; i++) {
        // If we can include the whole item, do it
        if (items[i].weight <= capacity) {
            capacity -= items[i].weight;
            totalValue += items[i].value;
        } else {
            // Otherwise include the fraction of the item
            totalValue += items[i].value * ((double)capacity / items[i].weight);
            break;
        }
    }

    return totalValue;
}

int main() {
    int n; // Number of items
    int capacity; // Capacity of the knapsack
    printf("R.Gnana Prakash Reddy - 192211740\n");

    printf("Enter the number of items: ");
    scanf("%d", &n);

    struct Item items[n];
    printf("Enter the value and weight of each item:\n");
    for (int i = 0; i < n; i++) {
        printf("Item %d - Value: ", i + 1);
        scanf("%d", &items[i].value);
        printf("Item %d - Weight: ", i + 1);
        scanf("%d", &items[i].weight);
    }

    printf("Enter the capacity of the knapsack: ");
    scanf("%d", &capacity);

    double maxValue = fractionalKnapsack(items, n, capacity);
    printf("Maximum value in knapsack = %.2f\n", maxValue);

    return 0;
}
